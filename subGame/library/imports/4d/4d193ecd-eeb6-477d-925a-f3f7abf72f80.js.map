{"version":3,"sources":["..\\..\\..\\assets/assets\\rankList.js"],"names":["cc","Class","extends","Component","properties","display","Node","content","rankItem","Prefab","loadingLabel","scoreText","scoreTextLabel","Label","start","_self","wx","onMessage","console","log","data","messageType","_submitScore","MAIN_MENU_NUM","score","_fetchFriendData","_getScoreText","_removeChild","removeAllChildren","_showMessage","getUserCloudStorage","keyList","success","getres","KVDataList","length","setUserCloudStorage","key","value","Date","getTime","res","fail","complete","hideRnakList","userRank","topperUserRank","lowerUserRank","getUserInfo","openIdList","userRes","active","userData","getFriendCloudStorage","sort","a","b","i","index","isSelf","avatarUrl","string","grade1","grade2","nickname","showRankList","_showPlayerData","message","getComponent","rank","playerInfo","node","instantiate","parent","num","getChildByName","toString","userName","grade","userIcon","children","Sprite","loader","load","url","type","err","texture","error","spriteFrame","SpriteFrame","_showUserData","nickName"],"mappings":"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","file":"rankList.js","sourceRoot":"..\\..\\..\\assets","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        display:cc.Node,\r\n        content: cc.Node,\r\n        rankItem: cc.Prefab,\r\n        loadingLabel: cc.Node,\r\n        scoreText: cc.Node,\r\n        scoreTextLabel:cc.Label,\r\n    },\r\n    start () {\r\n        let _self = this;\r\n        wx.onMessage(data => {\r\n            console.log(data);\r\n            let messageType = data.messageType;\r\n            switch(messageType) {\r\n                case 1: // 提交分数\r\n                    _self._submitScore(data.MAIN_MENU_NUM, data.score);\r\n                    break;\r\n                case 2: // 获取排行榜\r\n                    _self._fetchFriendData(data.MAIN_MENU_NUM);\r\n                    break;\r\n                case 3://结束文字\r\n                    _self._getScoreText(data.MAIN_MENU_NUM);\r\n                    break;\r\n            }\r\n        });\r\n    },\r\n    _removeChild() {\r\n        this.content.removeAllChildren();\r\n        this._showMessage(\"玩命加载中...\");\r\n    },\r\n\r\n    // 提交分数\r\n    _submitScore(MAIN_MENU_NUM, score) {\r\n        console.log(\"提交分数开始\");\r\n        wx.getUserCloudStorage({\r\n            // 以key/value形式存储\r\n            keyList: [\"x\" + MAIN_MENU_NUM],\r\n            success: function(getres) {\r\n                console.log(\"getUserCloudStorage\", 'success', getres);\r\n                if (getres.KVDataList.length > 0) {\r\n                    if (MAIN_MENU_NUM == 1) { // TODO\r\n                        wx.setUserCloudStorage({\r\n                            KVDataList: [{\r\n                                key: \"Classic\",\r\n                                value: \"{\\\"wxgame\\\":{\\\"score\\\":\" + (getres.KVDataList[0].value > score ? getres.KVDataList[0].value : score) + \",\\\"update_time\\\": \" + new Date().getTime() + \"}}\"\r\n                            }],\r\n                        });\r\n                    }\r\n                    if (getres.KVDataList[0].value > score) {\r\n                        return ;\r\n                    }\r\n                }\r\n                // 对用户托管数据进行写数据操作\r\n                wx.setUserCloudStorage({\r\n                    KVDataList: [{\r\n                        key: \"x\" + MAIN_MENU_NUM,\r\n                        value: \"\" + score,\r\n                    }],\r\n                    success: function(res) {\r\n                        console.log('setUserCloudStorage', 'success', res);\r\n                    },\r\n                    fail: function(res) {\r\n                        console.log('setUserCloudStorage', 'fail', res);\r\n                    },\r\n                    complete: function(res) {\r\n                        console.log('setUserCloudStorage', 'ok', res);\r\n                    }\r\n                });\r\n            },\r\n            fail: function(res) {\r\n                console.log(\"getUserCloudStorage\", \"fail\");\r\n            },\r\n            complete: function(res) {\r\n                console.log(\"getUserCloudStorage\", \"ok\");\r\n            },\r\n        });\r\n    },\r\n\r\n    //结束文字\r\n    _getScoreText(MAIN_MENU_NUM){\r\n        this._removeChild();\r\n        this.hideRnakList();\r\n        let _self = this;\r\n        let userRank,topperUserRank,lowerUserRank;\r\n        wx.getUserInfo({\r\n            openIdList: ['selfOpenId'],\r\n            success: (userRes) => {\r\n                this.loadingLabel.active = false;\r\n                console.log('success', userRes.data);\r\n                let userData = userRes.data[0]; // 如果需要自己的\r\n                // 取出所有好友数据\r\n                wx.getFriendCloudStorage({\r\n                    keyList: [\"x\" + MAIN_MENU_NUM],\r\n                    success: res => {\r\n                        console.log(\"wx.getFriendCloudStorage success\", res);\r\n                        let data = res.data;\r\n                        data.sort((a, b) => {\r\n                            if (a.KVDataList.length == 0 && b.KVDataList.length == 0) {\r\n                                return 0;\r\n                            }\r\n                            if (a.KVDataList.length == 0) {\r\n                                return 1;\r\n                            }\r\n                            if (b.KVDataList.length == 0) {\r\n                                return -1;\r\n                            }\r\n                            return b.KVDataList[0].value - a.KVDataList[0].value;\r\n                        });\r\n                        for(let i = 0; i < data.length; i++) {\r\n                            var index = i;\r\n                            let isSelf = false;\r\n                            if (data[i].avatarUrl == userData.avatarUrl) {\r\n                                isSelf = true;\r\n\r\n                                userRank = index;\r\n                                topperUserRank = index-1;\r\n                                lowerUserRank = index+1;\r\n                            }\r\n                        }\r\n                        if(userRank == 0){\r\n                            _self.scoreTextLabel.string = \"你在好友中排名第一，炫耀一下吧\"\r\n                        }\r\n                        else if(userRank == data.length){\r\n                            _self.scoreTextLabel.string = \"你在好友中垫底了，快快奋起直追吧\"\r\n                        }\r\n                        else{\r\n                            let grade1 = data[userRank].KVDataList.length != 0 ? data[userRank].KVDataList[0].value : 0;\r\n                            let grade2 = data[topperUserRank].KVDataList.length != 0 ? data[topperUserRank].KVDataList[0].value : 0;\r\n                            let score = grade2 - grade1//距排名前一位好友分差\r\n                            _self.scoreTextLabel.string = \"你已超过\"+data[lowerUserRank].nickname+\",\\n距离下一位好友\"+data[topperUserRank].nickname+\"还差\"+score+\"分\"\r\n                        }\r\n                    },\r\n                    fail: res=>{\r\n                        _self._showMessage(\"获取数据失败，请检查网络连接\");\r\n                        console.log(\"获取排行榜失败\", res);\r\n                    },\r\n                });\r\n            },\r\n            fail: (res) => {\r\n                _self._showMessage(\"获取数据失败，请检查网络连接\");\r\n            }\r\n        });\r\n    },\r\n    // 获取排行榜数据\r\n    _fetchFriendData(MAIN_MENU_NUM) {\r\n        this._removeChild();\r\n        this.showRankList();\r\n        let _self = this;\r\n        wx.getUserInfo({\r\n            openIdList: ['selfOpenId'],\r\n            success: (userRes) => {\r\n                this.loadingLabel.active = false;\r\n                console.log('success', userRes.data);\r\n                let userData = userRes.data[0]; // 如果需要自己的\r\n                // 取出所有好友数据\r\n                wx.getFriendCloudStorage({\r\n                    keyList: [\"x\" + MAIN_MENU_NUM],\r\n                    success: res => {\r\n                        console.log(\"wx.getFriendCloudStorage success\", res);\r\n                        let data = res.data;\r\n                        data.sort((a, b) => {\r\n                            if (a.KVDataList.length == 0 && b.KVDataList.length == 0) {\r\n                                return 0;\r\n                            }\r\n                            if (a.KVDataList.length == 0) {\r\n                                return 1;\r\n                            }\r\n                            if (b.KVDataList.length == 0) {\r\n                                return -1;\r\n                            }\r\n                            return b.KVDataList[0].value - a.KVDataList[0].value;\r\n                        });\r\n                        for(let i = 0; i < data.length; i++) {\r\n                            let isSelf = false;\r\n                            if (data[i].avatarUrl == userData.avatarUrl) {\r\n                                isSelf = true;\r\n                            }\r\n                            _self._showPlayerData(i, data[i], isSelf);\r\n                        }\r\n                    },\r\n                    fail: res=>{\r\n                        _self._showMessage(\"获取数据失败，请检查网络连接\");\r\n                        console.log(\"获取排行榜失败\", res);\r\n                    },\r\n                });\r\n            },\r\n            fail: (res) => {\r\n                _self._showMessage(\"获取数据失败，请检查网络连接\");\r\n            }\r\n        });\r\n    },\r\n    _showMessage(message) {\r\n        this.loadingLabel.getComponent(cc.Label).string = message;\r\n        this.loadingLabel.active = true;\r\n    },\r\n\r\n    /**\r\n     * 显示排行榜，绘制好友信息\r\n     * TODO: 对当前玩家的记录做特殊标识\r\n     */\r\n    _showPlayerData(rank, playerInfo, isSelf) {\r\n        let node = cc.instantiate(this.rankItem);\r\n        node.parent = this.content;\r\n        // 排名\r\n        let num = node.getChildByName('num').getComponent(cc.Label);\r\n        num.string = (rank + 1).toString();\r\n        // 昵称\r\n        let userName = node.getChildByName('nickName').getComponent(cc.Label);\r\n        userName.string = playerInfo.nickname;\r\n        // 得分\r\n        let score = node.getChildByName('score').getComponent(cc.Label);\r\n        let grade = playerInfo.KVDataList.length != 0 ? playerInfo.KVDataList[0].value : 0;\r\n        score.string = grade.toString();\r\n\r\n        let userIcon = node.getChildByName('mask').children[0].getComponent(cc.Sprite);\r\n\r\n        cc.loader.load({\r\n            url: playerInfo.avatarUrl,\r\n            type: 'png'\r\n        }, (err, texture) => {\r\n            if (err) console.error(err);\r\n            console.log(texture);\r\n            userIcon.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    },\r\n    hideRnakList(){\r\n        this.display.active = false;\r\n        this.loadingLabel.active = false;\r\n        this.scoreText.active = true;\r\n    },\r\n    showRankList(){\r\n        this.display.active = true;\r\n        this.scoreText.active = false;\r\n    },\r\n    _showUserData(nickName, avatarUrl) {\r\n        let node = cc.instantiate(this.rankItem);\r\n        node.parent = this.content;\r\n        let userName = node.getChildByName('nickName').getComponent(cc.Label);\r\n        let userIcon = node.getChildByName('mask').children[0].getComponent(cc.Sprite);\r\n\r\n        userName.string = nickName;\r\n        console.log(nickName + '\\'s info has been getten');\r\n        cc.loader.load({\r\n            url: avatarUrl,\r\n            type: 'png'\r\n        }, (err, texture) => {\r\n            if (err) console.error(err);\r\n            console.log(texture);\r\n            userIcon.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    },\r\n});\r\n"]}
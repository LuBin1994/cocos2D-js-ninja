{"version":3,"sources":["rankList.js"],"names":["cc","Class","extends","Component","properties","displayNode","Node","display","ScrollView","content","rankItem","Prefab","loadingLabel","scoreText","scoreTextLabel","Label","userInfo","index","start","_self","scrollToTop","wx","onMessage","messageType","data","_submitScore","MAIN_MENU_NUM","score","_fetchFriendData","_getScoreText","_hideSub","_removeChild","removeAllChildren","_showMessage","getUserCloudStorage","keyList","success","getres","KVDataList","length","console","log","setUserCloudStorage","key","value","Date","getTime","res","fail","complete","hideRankList","userRank","topperUserRank","lowerUserRank","getUserInfo","openIdList","userRes","active","userData","getFriendCloudStorage","sort","a","b","i","isSelf","avatarUrl","string","grade1","grade2","upperName","_cutstr","nickname","lowerName","showRankList","_showUserData","_showPlayerData","on","message","getComponent","rank","playerInfo","isUser","node","instantiate","parent","bg","getChildByName","num","toString","userName","nickNameStr","grade","userIcon","Sprite","loader","load","url","type","err","texture","error","spriteFrame","SpriteFrame","str","len","str_length","str_len","str_cut","String","charAt","concat"],"mappings":"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","file":"rankList.js","sourceRoot":"..\\..\\..\\assets","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        displayNode: cc.Node,\r\n        display: cc.ScrollView,\r\n        content: cc.Node,\r\n        rankItem: cc.Prefab,\r\n        loadingLabel: cc.Node,\r\n        scoreText: cc.Node,\r\n        scoreTextLabel: cc.Label,\r\n        userInfo: cc.Node,\r\n        index: 1,\r\n    },\r\n    start() {\r\n        let _self = this;\r\n        //默认排行榜置顶\r\n        this.display.scrollToTop(0)\r\n        wx.onMessage(data => {\r\n            let messageType = data.messageType;\r\n            switch (messageType) {\r\n                case 1: // 提交分数\r\n                    _self._submitScore(data.MAIN_MENU_NUM, data.score);\r\n                    break;\r\n                case 2: // 获取排行榜\r\n                    _self._fetchFriendData(data.MAIN_MENU_NUM);\r\n                    break;\r\n                case 3://结束文字\r\n                    _self._getScoreText(data.MAIN_MENU_NUM);\r\n                    break;\r\n                case 5://隐藏子域\r\n                    _self._hideSub();\r\n                    break;\r\n            }\r\n        });\r\n    },\r\n    _removeChild() {\r\n        this.content.removeAllChildren();\r\n        this._showMessage(\"玩命加载中...\");\r\n    },\r\n    // 提交分数\r\n    _submitScore(MAIN_MENU_NUM, score) {\r\n        wx.getUserCloudStorage({\r\n            // 以key/value形式存储\r\n            keyList: [\"x2\" + MAIN_MENU_NUM],\r\n            success: function (getres) {\r\n                if (getres.KVDataList.length > 0) {\r\n                    if (MAIN_MENU_NUM == 'ninja_crossing') { // TODO\r\n                        console.log('已小游戏中心数据格式要求上传分数')\r\n                        wx.setUserCloudStorage({\r\n                            KVDataList: [{\r\n                                key: \"ninja\",\r\n                                value: \"{\\\"wxgame\\\":{\\\"score\\\":\" + (getres.KVDataList[0].value > score ? getres.KVDataList[0].value : score) + \",\\\"update_time\\\": \" + new Date().getTime() + \"}}\"\r\n                            }],\r\n                            success: function (res) {\r\n                                console.log(\"{\\\"wxgame\\\":{\\\"score\\\":\" + (getres.KVDataList[0].value > score ? getres.KVDataList[0].value : score) + \",\\\"update_time\\\": \" + new Date().getTime() + \"}}\")\r\n                            }\r\n                        });\r\n                    }\r\n                    if (getres.KVDataList[0].value > score) {\r\n                        return;\r\n                    }\r\n                }\r\n                // 对用户托管数据进行写数据操作\r\n                wx.setUserCloudStorage({\r\n                    KVDataList: [{\r\n                        key: \"x2\" + MAIN_MENU_NUM,\r\n                        value: \"\" + score,\r\n                    }],\r\n                    success: function (res) {\r\n                        console.log('排行榜分数上传成功');\r\n                    },\r\n                    fail: function (res) {\r\n                        console.log('setUserCloudStorage', 'fail', res);\r\n                    },\r\n                    complete: function (res) {\r\n                        console.log('setUserCloudStorage', 'ok', res);\r\n                    }\r\n                });\r\n            },\r\n            fail: function (res) {\r\n                console.log(\"getUserCloudStorage\", \"fail\");\r\n            },\r\n            complete: function (res) {\r\n                console.log(\"getUserCloudStorage\", \"ok\");\r\n            },\r\n        });\r\n    },\r\n    //结束文字\r\n    _getScoreText(MAIN_MENU_NUM) {\r\n        this._removeChild();\r\n        this.hideRankList();\r\n        let _self = this;\r\n        let userRank, topperUserRank, lowerUserRank;\r\n        wx.getUserInfo({\r\n            openIdList: ['selfOpenId'],\r\n            success: (userRes) => {\r\n                this.loadingLabel.active = false;\r\n                console.log('success', userRes.data);\r\n                let userData = userRes.data[0]; // 如果需要自己的\r\n                // 取出所有好友数据\r\n                wx.getFriendCloudStorage({\r\n                    keyList: [\"x2\" + MAIN_MENU_NUM],\r\n                    success: res => {\r\n                        console.log(\"wx.getFriendCloudStorage success\", res);\r\n                        let data = res.data;\r\n                        data.sort((a, b) => {\r\n                            if (a.KVDataList.length == 0 && b.KVDataList.length == 0) {\r\n                                return 0;\r\n                            }\r\n                            if (a.KVDataList.length == 0) {\r\n                                return 1;\r\n                            }\r\n                            if (b.KVDataList.length == 0) {\r\n                                return -1;\r\n                            }\r\n                            return b.KVDataList[0].value - a.KVDataList[0].value;\r\n                        });\r\n                        for (let i = 0; i < data.length; i++) {\r\n                            var index = i;\r\n                            let isSelf = false;\r\n                            if (data[i].avatarUrl == userData.avatarUrl) {\r\n                                isSelf = true;\r\n                                userRank = index;\r\n                                topperUserRank = index - 1;\r\n                                lowerUserRank = index + 1;\r\n                            }\r\n                        }\r\n                        if (userRank == 0) {\r\n                            _self.scoreTextLabel.string = \"你在好友中占据第一!\";\r\n                        }\r\n                        else if (userRank == data.length - 1) {\r\n                            _self.scoreTextLabel.string = \"你在好友中垫底了，快快奋起直追吧!\";\r\n                        }\r\n                        else {\r\n                            let grade1 = data[userRank].KVDataList.length != 0 ? data[userRank].KVDataList[0].value : 0;\r\n                            let grade2 = data[topperUserRank].KVDataList.length != 0 ? data[topperUserRank].KVDataList[0].value : 0;\r\n                            let score = grade2 - grade1//距排名前一位好友分差\r\n                            let upperName = _self._cutstr(data[topperUserRank].nickname, 4);\r\n                            let lowerName = _self._cutstr(data[lowerUserRank].nickname, 10);\r\n                            _self.scoreTextLabel.string = \"你已超过\" + lowerName + \",\\n距离下一位好友\" + upperName + \"还差\" + score + \"分\";\r\n                        }\r\n                    },\r\n                    fail: res => {\r\n                        _self._showMessage(\"获取数据失败，请检查网络连接\");\r\n                        console.log(\"获取排行榜失败\", res);\r\n                    },\r\n                });\r\n            },\r\n            fail: (res) => {\r\n                _self._showMessage(\"获取数据失败，请检查网络连接\");\r\n            }\r\n        });\r\n    },\r\n    // 获取排行榜数据\r\n    _fetchFriendData(MAIN_MENU_NUM) {\r\n        this._removeChild();\r\n        this.index = 1;\r\n        this.showRankList();\r\n        let _self = this;\r\n        wx.getUserInfo({\r\n            openIdList: ['selfOpenId'],\r\n            success: (userRes) => {\r\n                this.loadingLabel.active = false;\r\n                let userData = userRes.data[0]; // 如果需要自己的\r\n                // 取出所有好友数据\r\n                wx.getFriendCloudStorage({\r\n                    keyList: [\"x2\" + MAIN_MENU_NUM],\r\n                    success: res => {\r\n                        let data = res.data;\r\n                        data.sort((a, b) => {\r\n                            if (a.KVDataList.length == 0 && b.KVDataList.length == 0) {\r\n                                return 0;\r\n                            }\r\n                            if (a.KVDataList.length == 0) {\r\n                                return 1;\r\n                            }\r\n                            if (b.KVDataList.length == 0) {\r\n                                return -1;\r\n                            }\r\n                            return b.KVDataList[0].value - a.KVDataList[0].value;\r\n                        });\r\n                        for (let i = 0; i < data.length; i++) {\r\n                            if (data[i].avatarUrl == userData.avatarUrl) {\r\n                                _self._showUserData(i, data[i])\r\n                            }\r\n                        }\r\n                        for (let i = 0; i < 10; i++) {\r\n                            if (data[i].avatarUrl == userData.avatarUrl) {\r\n                                _self._showPlayerData(i, data[i], true);\r\n                            }\r\n                            else {\r\n                                _self._showPlayerData(i, data[i], false)\r\n                            }\r\n                        }\r\n                        this.displayNode.on(\"bounce-bottom\", function () {\r\n                            var index = _self.index;\r\n                            var length = data.length - 10 * index\r\n                            if (length > 10) {\r\n                                for (let i = 10 * index; i < 10 * index + 10; i++) {\r\n                                    if (data[i].avatarUrl == userData.avatarUrl) {\r\n                                        _self._showPlayerData(i, data[i], false);\r\n                                    }\r\n                                    else {\r\n                                        _self._showPlayerData(i, data[i], false)\r\n                                    }\r\n                                }\r\n                                _self.index++;\r\n                            }\r\n                            else if (length <= 10 && length > 0) {\r\n                                for (let i = 10 * _self.index; i < data.length; i++) {\r\n                                    if (data[i].avatarUrl == userData.avatarUrl) {\r\n                                        _self._showPlayerData(i, data[i], true);\r\n                                    }\r\n                                    else {\r\n                                        _self._showPlayerData(i, data[i], false)\r\n                                    }\r\n                                }\r\n                                _self.index++;\r\n                            }\r\n                        })\r\n                    },\r\n                    fail: res => {\r\n                        _self._showMessage(\"获取数据失败，请检查网络连接\");\r\n                        console.log(\"获取排行榜失败\", res);\r\n                    },\r\n                });\r\n            },\r\n            fail: (res) => {\r\n                _self._showMessage(\"获取数据失败，请检查网络连接\");\r\n            }\r\n        });\r\n    },\r\n    //显示加载信息\r\n    _showMessage(message) {\r\n        this.loadingLabel.getComponent(cc.Label).string = message;\r\n        this.loadingLabel.active = true;\r\n    },\r\n    /**\r\n     * 显示排行榜，绘制好友信息\r\n     * TODO: 对当前玩家的记录做特殊标识\r\n     */\r\n    _showPlayerData(rank, playerInfo, isUser) {\r\n        let node = cc.instantiate(this.rankItem);\r\n        node.parent = this.content;\r\n        if (isUser) {\r\n            var bg = node.getChildByName(\"itemBg\");\r\n            bg.active = true;\r\n        }\r\n        // 排名\r\n        let num = node.getChildByName('num').getComponent(cc.Label);\r\n        num.string = (rank + 1).toString();\r\n        // 昵称\r\n        let userName = node.getChildByName('nickName').getComponent(cc.Label);\r\n        let nickNameStr = this._cutstr(playerInfo.nickname, 6)\r\n        userName.string = nickNameStr;\r\n        // 得分\r\n        let score = node.getChildByName('score').getComponent(cc.Label);\r\n        let grade = playerInfo.KVDataList.length != 0 ? playerInfo.KVDataList[0].value : 0;\r\n        score.string = grade.toString();\r\n\r\n        let userIcon = node.getChildByName('userIcon').getComponent(cc.Sprite);\r\n        if (playerInfo.avatarUrl != '') {\r\n            cc.loader.load({\r\n                url: playerInfo.avatarUrl,\r\n                type: 'png'\r\n            }, (err, texture) => {\r\n                if (err) console.error(err);\r\n                userIcon.spriteFrame = new cc.SpriteFrame(texture);\r\n            });\r\n        }\r\n    },\r\n    //隐藏玩家数据\r\n    hideRankList() {\r\n        this.display.active = false;\r\n        this.loadingLabel.active = false;\r\n        this.userInfo.active = false\r\n        this.scoreText.active = true;\r\n    },\r\n    //显示玩家数据\r\n    showRankList() {\r\n        this.display.active = true;\r\n        this.userInfo.active = true;\r\n        this.scoreText.active = false;\r\n    },\r\n    //显示用户数据\r\n    _showUserData(rank, playerInfo) {\r\n        this.userInfo.removeAllChildren();\r\n        let node = cc.instantiate(this.rankItem);\r\n        node.parent = this.userInfo;\r\n\r\n        var bg = node.getChildByName(\"itemBg\");\r\n        bg.active = true;\r\n        // 排名\r\n        let num = node.getChildByName('num').getComponent(cc.Label);\r\n        num.string = (rank + 1).toString();\r\n        // 昵称\r\n        let userName = node.getChildByName('nickName').getComponent(cc.Label);\r\n        let nickNameStr = this._cutstr(playerInfo.nickname, 6)\r\n        userName.string = nickNameStr;\r\n        // 得分\r\n        let score = node.getChildByName('score').getComponent(cc.Label);\r\n        let grade = playerInfo.KVDataList.length != 0 ? playerInfo.KVDataList[0].value : 0;\r\n        score.string = grade.toString();\r\n\r\n        let userIcon = node.getChildByName('userIcon').getComponent(cc.Sprite);\r\n        if (playerInfo.avatarUrl != '') {\r\n            cc.loader.load({\r\n                url: playerInfo.avatarUrl,\r\n                type: 'png'\r\n            }, (err, texture) => {\r\n                if (err) console.error(err);\r\n                userIcon.spriteFrame = new cc.SpriteFrame(texture);\r\n            });\r\n        }\r\n    },\r\n    //隐藏子域\r\n    _hideSub() {\r\n        this.display.active = false;\r\n        this.loadingLabel.active = false;\r\n        this.scoreText.active = false;\r\n    },\r\n    //截取玩家名字\r\n    _cutstr(str, len) {\r\n        //如果给定字符串小于指定长度，则返回源字符串；\r\n        if (str.length <= len) {\r\n            return str\r\n        }\r\n        var str_length = 0;\r\n        var str_len = 0;\r\n        var str_cut = new String();\r\n        var str_len = str.length;\r\n        for (var i = 0; i < str_len; i++) {\r\n            var a = str.charAt(i);\r\n            str_length++;\r\n            str_cut = str_cut.concat(a);\r\n            if (str_length >= len) {\r\n                str_cut = str_cut.concat(\"...\");\r\n                return str_cut;\r\n            }\r\n        }\r\n    }\r\n});\r\n"]}
{"version":3,"sources":["util.js"],"names":["Util","btnEvent","NODE","btnSound","CALLBACKS","on","setScale","cc","audioEngine","playEffect","modeBtnEvent","gameStartDataInit","GameDataManager","totalScore","isMove","isSuccess","canDrop","move","isAnimate","isLengthen","isStartLengthen","isGameOver","isHideSub","gameContinueDataInit","randomNum","multiple","Math","floor","random","setGameDifficulty","num","GameConfig","MaxMultiProbability","sharkJumpDurTime","gameLog","logLevel","logRemark","wx","request","url","LOG_URL","data","config","header","getStorageSync","method","seccuss","res","console","log","status","info"],"mappings":"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","file":"util.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\utils","sourcesContent":["import GameDataManager from '../gameDataManager';\nimport GameConfig from '../gameConfig'\nvar Util = {\n    /**\n     * 普通按钮触摸效果\n     * @param NODE 按钮节点\n     * @param btnSound 按钮音效\n     * @param CALLBACKS touchend回调函数\n     */\n    btnEvent(NODE,btnSound,CALLBACKS){\n        NODE.on('touchstart',function(){\n            NODE.setScale(0.8);\n            cc.audioEngine.playEffect(btnSound,false,1);\n        });\n        NODE.on('touchend',function(){\n            NODE.setScale(1);\n            CALLBACKS && CALLBACKS();\n        });\n        NODE.on('touchcancel',function () {\n            NODE.setScale(1);\n            CALLBACKS && CALLBACKS();\n        })\n    },\n    /**\n     * 模式选择按钮触摸效果\n     * @param NODE 按钮节点\n     * @param btnSound 按钮音效\n     * @param CALLBACKS touchend回调函数\n     */\n    modeBtnEvent(NODE,btnSound,CALLBACKS){\n        NODE.on('touchstart',function(){\n            cc.audioEngine.playEffect(btnSound,false,1);\n        });\n        NODE.on('touchend',function(){\n            CALLBACKS && CALLBACKS();\n        });\n    },\n    /**\n     * 游戏开始或重开数据初始化\n     */\n    gameStartDataInit(){\n        GameDataManager.totalScore = 0;\n        GameDataManager.isMove = false;\n        GameDataManager.isSuccess = false;\n        GameDataManager.canDrop = false;\n        GameDataManager.move = 0;\n        GameDataManager.isAnimate = false;\n        GameDataManager.isLengthen = false;\n        GameDataManager.isStartLengthen = false;\n        GameDataManager.isGameOver = false;\n        GameDataManager.isHideSub = false;\n    },\n    /**\n     * 本局游戏继续数据初始化\n     */\n    gameContinueDataInit(){\n        GameDataManager.isMove = false;\n        GameDataManager.isSuccess = false;\n        GameDataManager.canDrop = false;\n        GameDataManager.move = 0;\n        GameDataManager.isAnimate = false;\n        GameDataManager.isLengthen = false;\n        GameDataManager.isStartLengthen = false;\n        GameDataManager.isGameOver = false;\n        GameDataManager.isHideSub = false;\n    },\n    /**\n     * 返回随机数，范围 0~multiple的整数\n     * @param multiple 随机数上限\n     */\n    randomNum(multiple){\n        return Math.floor(Math.random()*multiple);\n    },\n    /**\n     * 游戏难度设置\n     * @param num 游戏难度等级\n     */\n    setGameDifficulty(num){\n        switch(num){\n            case 1:\n                GameConfig.MaxMultiProbability = 0.2;\n                GameConfig.sharkJumpDurTime = 40;\n                break;\n            case 2:\n                GameConfig.MaxMultiProbability = 0.25;\n                GameConfig.sharkJumpDurTime = 37;\n                break;\n            case 3:\n                GameConfig.MaxMultiProbability = 0.3;\n                GameConfig.sharkJumpDurTime = 34;\n                break;\n            case 4:\n                GameConfig.MaxMultiProbability = 0.35;\n                GameConfig.sharkJumpDurTime = 31;\n                break;\n            case 5:\n                GameConfig.MaxMultiProbability = 0.4;\n                GameConfig.sharkJumpDurTime = 28;\n                break;\n            case 6:\n                GameConfig.MaxMultiProbability = 0.5;\n                GameConfig.sharkJumpDurTime = 25;\n                break;\n            case 7:\n                GameConfig.MaxMultiProbability = 0.6;\n                GameConfig.sharkJumpDurTime = 22;\n                break;\n            case 8:\n                GameConfig.MaxMultiProbability = 0.7;\n                GameConfig.sharkJumpDurTime = 19;\n                break;\n            case 9:\n                GameConfig.MaxMultiProbability = 0.8;\n                GameConfig.sharkJumpDurTime = 16;\n                break;\n            case 10:\n                GameConfig.MaxMultiProbability = 0.9;\n                GameConfig.sharkJumpDurTime = 13;\n                break;\n        }\n    },\n    /**\n     * 游戏日志\n     * @param logLevel 日志等级\n     * @param logRemark 日志备注\n     */\n    gameLog(logLevel,logRemark){\n        wx.request({\n            url:GameConfig.LOG_URL+'submit',\n            data:{\n                'code':2,\n                'env':2,\n                'content':GameConfig.config,\n                'level':logLevel,\n                'remark':logRemark\n            },\n            header: {\n                'content-type': 'application/x-www-form-urlencoded',\n                'sessionId':'SESSION='+wx.getStorageSync('sessionId')\n            },\n            method:\"POST\",\n            seccuss(res){\n                console.log('日志接口访问成功')\n                console.log(res.data)\n                if(res.data.status){\n                    console.log('日志提交成功')\n                }\n                else{\n                  console.log(res.data.info)\n              }\n            }\n        })\n    }\n}\nexport default Util"]}